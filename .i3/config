set $mod Mod4
set $altmod Mod1

font pango:Terminess Powerline 24px
# Requires XFT-patched dmenu
set $dmenu_font "Terminess Powerline:pixelsize=24"
set $dmenu_pad "3"

floating_modifier $mod

bindsym $mod+Shift+Return exec --no-startup-id st

bindsym $mod+Shift+c kill

set $normbgcolor "#101010"
set $normfgcolor "#dddddd"
set $selbgcolor  "#224488"
set $selfgcolor  "#cc9a1c"
bindsym $mod+p exec --no-startup-id dmenu_run             -fn $dmenu_font -nb $normbgcolor -nf $normfgcolor -sb $selbgcolor -sf $selfgcolor -d $dmenu_pad
bindsym $mod+o exec --no-startup-id ~/.i3/dmenu_tag       -fn $dmenu_font -nb $normbgcolor -nf $normfgcolor -sb $selbgcolor -sf $selfgcolor -d $dmenu_pad | xargs i3-msg workspace
bindsym $mod+Shift+o exec --no-startup-id ~/.i3/dmenu_tag -fn $dmenu_font -nb $normbgcolor -nf $normfgcolor -sb $selbgcolor -sf $selfgcolor -d $dmenu_pad | xargs i3-msg move to workspace
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu="dmenu -fn $dmenu_font -nb $normbgcolor -nf $normfgcolor -sb $selbgcolor -sf $selfgcolor"

bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

bindsym $mod+Ctrl+h move to output left
bindsym $mod+Ctrl+j move to output down
bindsym $mod+Ctrl+k move to output up
bindsym $mod+Ctrl+l move to output right
bindsym $mod+Shift+comma move to output left
bindsym $mod+Shift+period move to output right

# DWM-ish keybindings. Correspond to the layout one would have in my config
# with the bstack patches applied, and a 0-master tag (*cough* workspace
# *cough*).
#bindsym $mod+Shift+z split h
#bindsym $mod+Shift+x split v
# More intuitive keybindings than the DWM ones. This set is like the S and D in
# WASD, in that they point to where to put the next window.
bindsym $mod+Shift+z split v
bindsym $mod+Shift+x split h

bindsym $mod+m fullscreen

bindsym $mod+t layout stacking
bindsym $mod+u layout tabbed
# DWM-ish keybindings
#bindsym $mod+z layout splith
#bindsym $mod+x layout splitv
# More intuitive keybindings than the DWM ones. This set is like the S and D in
# WASD, in that they are on the axis on which windows are arranged.
bindsym $mod+z layout splitv
bindsym $mod+x layout splith

bindsym $mod+Shift+space floating toggle
bindsym $mod+space focus mode_toggle

bindsym $mod+comma focus output left
bindsym $mod+period focus output right

bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# DWM-like snap to last tag set/workspace
bindsym $mod+Tab workspace back_and_forth
# Traditional WM-like workspace cycling bindings
#bindsym $mod+Shift+Tab workspace prev
#bindsym $mod+Tab workspace next

bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

bindsym $mod+Shift+q exit

bindsym $mod+r reload
bindsym $mod+Shift+r restart

bindsym $mod+w mode "resize"
mode "resize" {
    bindsym h resize shrink width  10 px or 10 ppt
    bindsym j resize grow   height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow   width  10 px or 10 ppt

    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+w mode "default"
}

bindsym XF86AudioRaiseVolume exec amixer --quiet set Master 5%+
bindsym XF86AudioLowerVolume exec amixer --quiet set Master 5%-
bindsym XF86AudioMute        exec amixer --quiet set Master toggle

bindsym XF86MonBrightnessUp   exec gmux_brightness -inc
bindsym XF86MonBrightnessDown exec gmux_brightness -dec
bindsym XF86KbdBrightnessUp   exec keyboard_brightness -inc
bindsym XF86KbdBrightnessDown exec keyboard_brightness -dec

# pause and play inverted what I'd like them to be
bindsym XF86AudioPlay  exec cmus-remote --pause
bindsym XF86AudioPause exec cmus-remote --play
bindsym XF86AudioNext exec cmus-remote --next
bindsym XF86AudioPrev exec cmus-remote --prev
bindsym Shift+XF86AudioNext exec cmus-remote --seek +1m
bindsym Shift+XF86AudioPrev exec cmus-remote --seek -1m
bindsym $altmod+XF86AudioNext exec cmus-remote --seek +5
bindsym $altmod+XF86AudioPrev exec cmus-remote --seek -5

bindsym XF86Eject exec eject

for_window [class="mupen64plus"]   floating enable
for_window [class="SDLJoytest-GL"] floating enable
for_window [class="Vlc"]           floating enable
for_window [class="mpv"]           floating enable
for_window [class="vbam"]          floating enable
for_window [class="XClock"]        floating enable
for_window [class="xzoom"]         floating enable
for_window [class="Notify-osd"]    floating enable
for_window [class="qemu-system-x86_64"] floating enable
for_window [title="BattleWorldsKronos"] floating enable

default_orientation vertical

set $borderpx 4
new_window pixel $borderpx
new_float pixel  $borderpx

set $normbordercolor "#333333"
set $selbordercolor  "#ff5800"
set $urgbordercolor  "#ff0000"

# class                   border           background  text        indicator
# TODO: blueish
#client.focused           
#client.focused_inactive  
# TODO: usual grey
#client.unfocused         
# TODO: orangey
#client.urgent            
# If using border widths above, use following colours instead to emulate DWM
client.focused $selbordercolor $selbordercolor $selbordercolor $selbordercolor
# TODO: Independent colours
#client.focused $selbordercolor $selbgcolor $selfgcolor $selindicator

bar {
    mode dock
    position top
    workspace_buttons yes
}
